#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/5b495e01-54aa-4565-aee7-4d26aba66950 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int speed;
  bool backward;
  bool forward;
  bool left;
  bool right;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/


const int AIA = 3;
const int AIB = 4;
const int BIA = 5;
const int BIB = 6;
const int AIA1 = 7;
const int AIB1 = 8;
const int BIA1 = 9;
const int BIB1 = 10;


#include "thingProperties.h"

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
 
  
  pinMode(AIA, OUTPUT);
  pinMode(AIB, OUTPUT);
  pinMode(BIA, OUTPUT);
  pinMode(BIB, OUTPUT);
  pinMode(AIA1, OUTPUT);
  pinMode(AIB1, OUTPUT);
  pinMode(BIA1, OUTPUT);
  pinMode(BIB1, OUTPUT);

}

void bwd(int speed1){
  analogWrite(AIA, speed1);
  analogWrite(AIB, 0);
  analogWrite(BIA, speed1);
  analogWrite(BIB, 0);
  analogWrite(AIA1, 0);
  analogWrite(AIB1, speed1);
  analogWrite(BIA1, 0);
  analogWrite(BIB1, speed1);
}

void fwd(int speed1){
  analogWrite(AIA, 0);
  analogWrite(AIB, speed1);
  analogWrite(BIA, 0);
  analogWrite(BIB, speed1);
  analogWrite(AIA1, speed1);
  analogWrite(AIB1, 0);
  analogWrite(BIA1, speed1);
  analogWrite(BIB1, 0);
}

void rt(int speed1){
  analogWrite(AIA, 0);
  analogWrite(AIB, speed1);
  analogWrite(BIA, 0);
  analogWrite(BIB, speed1);
  analogWrite(AIA1, 0);
  analogWrite(AIB1, speed1);
  analogWrite(BIA1, 0);
  analogWrite(BIB1, speed1);
}

void lt(int speed1){
  analogWrite(AIA, speed1);
  analogWrite(AIB, 0);
  analogWrite(BIA, speed1);
  analogWrite(BIB, 0);
  analogWrite(AIA1, speed1);
  analogWrite(AIB1, 0);
  analogWrite(BIA1, speed1);
  analogWrite(BIB1, 0);
}
void stp(){
  analogWrite(AIA, 0);
  analogWrite(AIB, 0);
  analogWrite(BIA, 0);
  analogWrite(BIB, 0);
  analogWrite(AIA1, 0);
  analogWrite(AIB1, 0);
  analogWrite(BIA1, 0);
  analogWrite(BIB1, 0);
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  int speed1 = map(speed, 0,10, 100,255);
  if(forward){
    fwd(speed1);
  }
  else if(backward){
    bwd(speed1);
  }
  else if(left){
    lt(speed1);
  }
  else if(right){
    rt(speed1);
  }
  else
  {
    stp();
  }
  

}

/*
  Since Forward is READ_WRITE variable, onForwardChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onForwardChange()  {
  // Add your code here to act upon Forward change
  Serial.write("Forward: " + forward);
}

/*
  Since Backward is READ_WRITE variable, onBackwardChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBackwardChange()  {
  // Add your code here to act upon Backward change
}

/*
  Since Left is READ_WRITE variable, onLeftChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLeftChange()  {
  // Add your code here to act upon Left change
}

/*
  Since Right is READ_WRITE variable, onRightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRightChange()  {
  // Add your code here to act upon Right change
}










/*
  Since Speed is READ_WRITE variable, onSpeedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSpeedChange()  {
  // Add your code here to act upon Speed change
}
